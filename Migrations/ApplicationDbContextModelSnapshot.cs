// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBanHang.Data;

#nullable disable

namespace WebBanHang.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebBanHang.Models.Entities.CT_DonHang", b =>
                {
                    b.Property<int>("IDDonHang")
                        .HasColumnType("int");

                    b.Property<int>("IDSanPham")
                        .HasColumnType("int");

                    b.Property<int>("DonHangID")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamID")
                        .HasColumnType("int");

                    b.HasKey("IDDonHang", "IDSanPham");

                    b.HasIndex("DonHangID");

                    b.HasIndex("SanPhamID");

                    b.ToTable("CT_DonHang");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.DonHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("IDQuanLy")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDuyet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IDQuanLy");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.Loai", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Loai");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.QuanLy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("QuanLy");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.SanPham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IDLoai")
                        .HasColumnType("int");

                    b.Property<string>("MieuTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDLoai");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.CT_DonHang", b =>
                {
                    b.HasOne("WebBanHang.Models.Entities.DonHang", "DonHang")
                        .WithMany("CT_DonHangs")
                        .HasForeignKey("DonHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBanHang.Models.Entities.SanPham", "SanPham")
                        .WithMany("CT_DonHangs")
                        .HasForeignKey("SanPhamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.DonHang", b =>
                {
                    b.HasOne("WebBanHang.Models.Entities.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBanHang.Models.Entities.QuanLy", "QuanLy")
                        .WithMany("DonHangss")
                        .HasForeignKey("IDQuanLy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("QuanLy");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.SanPham", b =>
                {
                    b.HasOne("WebBanHang.Models.Entities.Loai", "Loai")
                        .WithMany("SanPhams")
                        .HasForeignKey("IDLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loai");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.DonHang", b =>
                {
                    b.Navigation("CT_DonHangs");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.Loai", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.QuanLy", b =>
                {
                    b.Navigation("DonHangss");
                });

            modelBuilder.Entity("WebBanHang.Models.Entities.SanPham", b =>
                {
                    b.Navigation("CT_DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
